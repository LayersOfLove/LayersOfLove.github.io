{"version":3,"sources":["components/Header/index.js","img/layer00.png","img/layer01.png","img/layer02.png","img/layer03.png","img/layer04.png","img/layer05.png","img/layer06.png","img/layer07.png","img/layer08.png","img/layer09.png","components/SelectionGrid/index.js","components/Canvas/index.js","components/InstructionBar/index.js","components/Description/index.js","components/CanvasShareBar/index.js","components/Footer/index.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","icon","marginRight","spacing","float","title","authors","test","width","Header","classes","AppBar","position","Toolbar","className","Typography","variant","color","noWrap","images","layer00","layer01","layer02","layer03","layer04","layer05","layer06","layer07","layer08","layer09","root","flexGrow","marginBottom","paper","height","image","cursor","SelectionGrid","updateZIndexState","useState","zIndexMapping","setZIndexMapping","setZIndexStack","imageClicked","imageId","currentStack","index","indexOf","newStack","splice","push","currentMapping","newMapping","forEach","item","Grid","container","xs","justify","map","Paper","children","src","alt","onClick","style","top","left","backgroundColor","alignItems","display","borderRadius","padding","canvasDiv","blankDiv","border","Image","zIndex","Canvas","isBlank","reduce","a","b","margin","textAlign","fontSize","val","i","InstructionBar","Description","CanvasShareBar","footer","palette","primary","main","common","white","Footer","align","component","App","Container","maxWidth","newZIndex","md","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cab760c.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n      marginRight: theme.spacing(2),\n      float: 'left'\n    },\n    title: {\n      float: 'left'\n    },\n    authors: {\n      float: 'right'\n    },\n    test: {\n      width: '100%'\n    }\n}));\n\n\nexport default function Header() {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"relative\">\n      <Toolbar>\n        <div className={classes.test}>\n          <CameraIcon className={classes.icon} />\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n              Layers of Love\n          </Typography>\n          <Typography className={classes.authors} variant=\"h6\" color=\"inherit\" noWrap>\n            Khadija Aziz & Laura Kay Keeling\n          </Typography>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/layer00.69b36906.png\";","export default __webpack_public_path__ + \"static/media/layer01.c59e193c.png\";","export default __webpack_public_path__ + \"static/media/layer02.1de8c7e5.png\";","export default __webpack_public_path__ + \"static/media/layer03.7eabb3a5.png\";","export default __webpack_public_path__ + \"static/media/layer04.f66ed17b.png\";","export default __webpack_public_path__ + \"static/media/layer05.243d6db7.png\";","export default __webpack_public_path__ + \"static/media/layer06.5f56c567.png\";","export default __webpack_public_path__ + \"static/media/layer07.5091e89c.png\";","export default __webpack_public_path__ + \"static/media/layer08.856c2473.png\";","export default __webpack_public_path__ + \"static/media/layer09.856c2473.png\";","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport layer00 from '../../img/layer00.png';\nimport layer01 from '../../img/layer01.png';\nimport layer02 from '../../img/layer02.png';\nimport layer03 from '../../img/layer03.png';\nimport layer04 from '../../img/layer04.png';\nimport layer05 from '../../img/layer05.png';\nimport layer06 from '../../img/layer06.png';\nimport layer07 from '../../img/layer07.png';\nimport layer08 from '../../img/layer08.png';\nimport layer09 from '../../img/layer09.png';\n\nconst images = [\n  layer00,\n  layer01,\n  layer02,\n  layer03,\n  layer04,\n  layer05,\n  layer06,\n  layer07,\n  layer08,\n  layer09,\n]\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: \"1em\"\n  },\n  paper: {\n    position: 'relative',\n    height: 2 * 40,\n    width: 3 * 40,\n  },\n  image: {\n    height: \"100%\",\n    width: \"100%\",\n    cursor: 'pointer'\n  },\n}));\n\nexport default function SelectionGrid({ updateZIndexState }) {\n  const classes = useStyles();\n  const [zIndexMapping, setZIndexMapping] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n  const [zIndexStack, setZIndexStack] = useState([]);\n\n  function imageClicked(imageId) {\n    // update the stack \n    setZIndexStack(currentStack => {\n      let index = currentStack.indexOf(imageId);\n      let newStack = [...currentStack];\n      if (index > -1) {\n        // remove this image from the zIndexStack, if it exists in the current stack\n        newStack.splice(index, 1);\n      } else {\n        // add this image to the current stack\n        newStack.push(imageId);        \n      }\n\n      // update the zIndexMapping state based on the new updated stack\n      setZIndexMapping(currentMapping => {\n        let newMapping = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        newStack.forEach((item, index) => {\n          newMapping[item] = index + 1;\n        });\n\n        // update the parent's zIndexMapping so the parent can propogate the \n        // change onto the canvas.\n        updateZIndexState([...newMapping]);\n        return newMapping;\n      });\n\n      return newStack;\n    });\n\n  }\n\n  return (\n    <Grid container className={classes.root} spacing={2}>\n      <Grid item xs={12}>\n        <Grid container justify=\"center\" spacing={2}>\n          {[0, 1, 2, 3, 4].map((imageId) => (\n            <Grid key={imageId} item>\n              <Paper className={classes.paper} children={\n                <>\n                  { zIndexMapping[imageId] === 0 ? \n                        <img\n                          src={images[imageId]}\n                          alt={\"Layer \" + imageId}\n                          className={classes.image}\n                          onClick={() => imageClicked(imageId)}\n                        />\n                      :\n                        <>\n                          <img\n                            src={images[imageId]}\n                            alt={\"Layer \" + imageId}\n                            style={{\n                              position: 'absolute',\n                              height: \"100%\",\n                              width: \"100%\",\n                              top: 0,\n                              left: 0\n                            }}\n                          />\n                          <div\n                            onClick={() => imageClicked(imageId)}\n                            style={{\n                              position: 'absolute',\n                              height: \"100%\",\n                              width: \"100%\",\n                              top: 0,\n                              left: 0,\n                              backgroundColor: 'rgba(0, 0, 0, 0.46)',\n                              alignItems: 'center',\n                              display: 'flex',\n                              cursor: 'pointer'\n                            }}\n                          >\n                              <Typography variant=\"h4\" color=\"inherit\" noWrap\n                                style={{\n                                  position: 'absolute',\n                                  left: '30%',\n                                  color: 'white',\n                                  backgroundColor: 'rgba(0, 0, 0, 0.6)',\n                                  borderRadius: '1em 1em 1em 1em',\n                                  padding: '0.1em',\n                                  width: '35%',\n                                }}\n                              >\n                                {zIndexMapping[imageId]}\n                            </Typography>\n                          </div>\n                        </>\n                  }\n                </> }\n               />\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container justify=\"center\" spacing={2}>\n          {[5, 6, 7, 8, 9].map((imageId) => (\n            <Grid key={imageId} item>\n              <Paper className={classes.paper} children={\n                <>\n                  { zIndexMapping[imageId] === 0 ? \n                        <img\n                          src={images[imageId]}\n                          alt={\"Layer \" + imageId}\n                          className={classes.image}\n                          onClick={() => imageClicked(imageId)}\n                        />\n                      :\n                        <>\n                          <img\n                            src={images[imageId]}\n                            alt={\"Layer \" + imageId}\n                            style={{\n                              position: 'absolute',\n                              height: \"100%\",\n                              width: \"100%\",\n                              top: 0,\n                              left: 0\n                            }}\n                            />\n                          <div\n                            onClick={() => imageClicked(imageId)}\n                            style={{\n                              position: 'absolute',\n                              height: \"100%\",\n                              width: \"100%\",\n                              top: 0,\n                              left: 0,\n                              backgroundColor: 'rgba(0, 0, 0, 0.46)',\n                              alignItems: 'center',\n                              display: 'flex',\n                              cursor: 'pointer'\n                            }}\n                          >\n                              <Typography variant=\"h4\" color=\"inherit\" noWrap\n                                style={{\n                                  position: 'absolute',\n                                  left: '30%',\n                                  color: 'white',\n                                  backgroundColor: 'rgba(0, 0, 0, 0.6)',\n                                  borderRadius: '1em',\n                                  padding: '0.1em',\n                                  width: '35%',\n                                }}\n                              >\n                                {zIndexMapping[imageId]}\n                            </Typography>\n                          </div>\n                        </>\n                      }\n                </>\n              } />\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport layer00 from '../../img/layer00.png';\nimport layer01 from '../../img/layer01.png';\nimport layer02 from '../../img/layer02.png';\nimport layer03 from '../../img/layer03.png';\nimport layer04 from '../../img/layer04.png';\nimport layer05 from '../../img/layer05.png';\nimport layer06 from '../../img/layer06.png';\nimport layer07 from '../../img/layer07.png';\nimport layer08 from '../../img/layer08.png';\nimport layer09 from '../../img/layer09.png';\n\nconst images = [\n  layer00,\n  layer01,\n  layer02,\n  layer03,\n  layer04,\n  layer05,\n  layer06,\n  layer07,\n  layer08,\n  layer09,\n]\n\nconst useStyles = makeStyles(theme => ({\n  canvasDiv: {\n    position: 'relative',\n    width: '654.55px',\n    height: '436.36px'\n  }, \n  blankDiv: {\n    border: '1.5px solid black',\n    width: '654.55px',\n    height: '436.36px'\n  }\n}));\n\nfunction Image({ imageId, zIndex }) {\n  /**\n  * --- Image math ---\n  * Each image is 8 by 10 inches, 600 DPI\n  * w = 7200 pixels\n  * h = 4800 pixels\n  * 3:2 ratio\n  * ------------------\n  */\n  return (\n    <>\n    {zIndex === 0 ? <></> : \n      <img\n        src={images[imageId]}\n        alt={\"Layer \" + imageId}\n        style={\n          {\n            position: 'absolute',\n            top: '0px',\n            left: '0px',\n            zIndex: zIndex,\n            width: '100%',\n            height: '100%'\n          }\n        }\n      />\n    }\n    </>\n  );\n}\n\nexport default function Canvas({ zIndexMapping }) {\n  const classes = useStyles();\n  const isBlank = zIndexMapping.reduce((a, b) => a + b, 0) === 0;\n\n  return (\n    <>\n      <p style={{\n        padding: 0,\n        margin: 0,\n        textAlign: 'left',\n        fontSize: '0.9em'\n      }}>Canvas</p>\n      {isBlank ? \n        <div className={classes.blankDiv}></div>\n      :\n        <div className={classes.canvasDiv}>\n          {zIndexMapping.map((val, i) => {\n            return (\n              <Image key={`cgi-${i}`} imageId={i} zIndex={val} />\n            );\n          })}\n        </div>\n      }\n    </>\n  );\n}","import React from 'react';\n\nexport default function InstructionBar() {\n  return (\n    <p>[Placeholder for instructions]</p>\n  )\n}","import React from 'react';\n\nexport default function Description() {\n  return (\n    <p>[Placeholder for description]</p>\n  );\n}","import React from 'react';\n\nexport default function CanvasShareBar() {\n  return (\n    <p>[Placeholder for share links]</p>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white\n  },\n}));\n\nexport default function Footer() {\n  const classes = useStyles();\n  return (\n    <footer className={classes.footer}>\n      <Typography variant=\"subtitle1\" align=\"center\" component=\"p\">\n        [Footer placeholder]\n      </Typography>\n    </footer>\n  );\n}","import React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nimport './App.css';\nimport Header from '../Header'\nimport SelectionGrid from '../SelectionGrid';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Canvas from '../Canvas';\nimport InstructionBar from '../InstructionBar';\nimport Description from '../Description';\nimport CanvasShareBar from '../CanvasShareBar';\nimport Footer from '../Footer';\n\nexport default function App() {\n  /**\n   * Image z-index mappings. \n   * \n   * We have 10 images, with ids 0-9.\n   * \n   * Each image will be assigned a z-index `zIndex`.\n   * For this implementation, we'll assign our lowest z-index to be 1. \n   * \n   * So, we need to maintain a small list that maps indices (0-9) \n   * to the corresponding z-index for the image with that list index.\n   * \n   * We will also decide that a value of 0 will mean that the image does\n   * not exist in the canvas. \n   * \n   * So, the starting state, or default state of this list will\n   * be [0, 0, 0, 0, 0, 0, 0].\n   * \n   * Also, a z-index of anywhere between 1-10 can only appear once \n   * in the list.\n   *  \n   */\n  const [zIndexMapping, setZIndexMapping] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\n  function updateZIndexState(newZIndex) {\n    setZIndexMapping(newZIndex);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Container maxWidth=\"md\">\n        <h2>Hello! [Placeholder text on top]</h2>\n        <SelectionGrid \n          updateZIndexState={newZIndex => updateZIndexState(newZIndex)} />\n        <Grid container>\n          <Grid item md={3}>\n            <InstructionBar />\n          </Grid>\n          <Grid item md={9}>\n            <Canvas zIndexMapping={zIndexMapping} />\n            <CanvasShareBar />\n          </Grid>\n          <Grid item xs={12}>\n            <Description />\n          </Grid>\n        </Grid>\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}